{"version":3,"sources":["actions/contactActions.js","actions/types.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["addContact","contact","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","res","wrap","_context3","prev","next","axios","post","sent","type","payload","data","stop","_x3","apply","this","arguments","updateContact","id","_ref5","_callee5","_context5","put","concat","_x5","Contact","state","showContactInfo","onDeleteClick","_this","props","deleteContact","_this2","_this$props$contact","name","email","phone","react_default","createElement","className","onClick","setState","style","cursor","float","color","bind","react_router_dom","to","marginRight","Component","connect","_ref2","_callee2","_context2","delete","_x2","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","_ref","_callee","_context","get","_x","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","uuid","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","propTypes","PropTypes","func","isRequired","EditContact","match","params","nextProps","nextstate","_nextProps$contact","getContact","prototype","_ref4","_callee4","_context4","_x4","Header","branding","href","About","NotFound","initialState","combineReducers","length","undefined","action","objectSpread","toConsumableArray","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","layout_Header","react_router","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.89da8c39.chunk.js","sourcesContent":["import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  UPDATE_CONTACT,\r\n  GET_CONTACT\r\n} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n  dispatch({ type: DELETE_CONTACT, payload: id });\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  const res = await axios.post(\r\n    `https://jsonplaceholder.typicode.com/users`,\r\n    contact\r\n  );\r\n  dispatch({ type: ADD_CONTACT, payload: res.data });\r\n};\r\nexport const getContact = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`\r\n  );\r\n  dispatch({ type: GET_CONTACT, payload: res.data });\r\n};\r\nexport const updateContact = (id, contact) => async dispatch => {\r\n  const res = await axios.put(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`,\r\n    contact\r\n  );\r\n  dispatch({ type: UPDATE_CONTACT, payload: res.data });\r\n};\r\n","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACTS';\r\nexport const ADD_CONTACT = 'ADD_CONTACTS';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../actions/contactActions';\nimport PropTypes from 'prop-types';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{' '}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem'\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteContact }\n)(Contact);\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../actions/contactActions';\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\n\n//const mapDispatchToProps = dispatch => ({\n// getContacts: () => dispatch({ type: GET_CONTACTS })\n//});\nexport default connect(\n  mapStateToProps,\n  //mapDispatchToProps\n  { getContacts }\n)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport { addContact } from '../../actions/contactActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\naddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addContact }\n)(AddContact);\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport { getContact, updateContact } from '../../actions/contactActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  componentWillReceiveProps(nextProps, nextstate) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  // here if i not use await then code will run asyncronosly and before getContact\n  // execute it will run below code hence this.props.contact get nothing\n  //to get props value i have to use await to compeletly execute getContact function  like await this.props.getContact(id);\n  // also i can use componentWillReciveProps method of component which will run whenever props is changed like\n  // await this.props.getContact(id);\n  // console.log(this.props.contact);\n  // const { name, email, phone } = this.props.contact;\n  // this.setState({ name, email, phone });\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    //// UPDATE CONTACT ////\n    this.props.updateContact(id, updateContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contact: state.contact.contact\n});\n\nupdateContact.prototype = {\n  updateContact: PropTypes.func.isRequired\n};\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired\n};\nexport default connect(\n  mapStateToProps,\n  { updateContact, getContact }\n)(EditContact);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  UPDATE_CONTACT,\r\n  GET_CONTACT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: {}\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => {\r\n          return contact.id !== action.payload;\r\n        })\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => {\r\n          return contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact;\r\n        })\r\n      };\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport contactReducer from './contactReducer';\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialSate = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialSate,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}